$date
	Tue Dec 27 16:28:16 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 16 ! tb_S [15:0] $end
$var wire 1 " tb_CO $end
$var reg 16 # tb_X [15:0] $end
$var reg 16 $ tb_Y [15:0] $end
$scope module test $end
$var wire 16 % A [15:0] $end
$var wire 16 & B [15:0] $end
$var wire 1 ' CI $end
$var wire 1 " CO $end
$var wire 16 ( p [15:0] $end
$var wire 16 ) g [15:0] $end
$var wire 16 * S [15:0] $end
$var wire 4 + P [3:0] $end
$var wire 4 , G [3:0] $end
$var wire 3 - C [2:0] $end
$scope module pg $end
$var wire 16 . A [15:0] $end
$var wire 16 / B [15:0] $end
$var wire 16 0 p [15:0] $end
$var wire 16 1 g [15:0] $end
$upscope $end
$scope module s1 $end
$var wire 1 ' CI $end
$var wire 4 2 g [3:0] $end
$var wire 4 3 p [3:0] $end
$var wire 4 4 S [3:0] $end
$var wire 3 5 C [2:0] $end
$upscope $end
$scope module s2 $end
$var wire 1 6 CI $end
$var wire 4 7 g [3:0] $end
$var wire 4 8 p [3:0] $end
$var wire 4 9 S [3:0] $end
$var wire 3 : C [2:0] $end
$upscope $end
$scope module s3 $end
$var wire 1 ; CI $end
$var wire 4 < g [3:0] $end
$var wire 4 = p [3:0] $end
$var wire 4 > S [3:0] $end
$var wire 3 ? C [2:0] $end
$upscope $end
$scope module s4 $end
$var wire 1 @ CI $end
$var wire 4 A g [3:0] $end
$var wire 4 B p [3:0] $end
$var wire 4 C S [3:0] $end
$var wire 3 D C [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx D
bx C
bx B
bx A
x@
bx ?
bx >
bx =
bx <
x;
bx :
bx 9
bx 8
bx 7
x6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
0'
bx &
bx %
bx $
bx #
x"
bx !
$end
#1
0@
0"
0;
06
b0 9
b0 >
b0 C
b0 -
b0 :
b0 ?
b0 D
b0 !
b0 *
b0 4
b0 5
b0 ,
b0 3
b0 8
b0 =
b0 B
b0 +
b0 2
b0 7
b0 <
b0 A
b0 (
b0 0
b0 )
b0 1
b0 $
b0 &
b0 /
b0 #
b0 %
b0 .
#2
b1 !
b1 *
b1 4
b1 3
b1 (
b1 0
b1 #
b1 %
b1 .
#3
b11 !
b11 *
b11 4
b11 3
b11 (
b11 0
b1 $
b1 &
b1 /
b10 #
b10 %
b10 .
#4
b10 5
b101 !
b101 *
b101 4
b1 3
b10 2
b1 (
b1 0
b10 )
b10 1
b11 $
b11 &
b11 /
#5
b110 !
b110 *
b110 4
b11 5
b0 3
b11 2
b0 (
b0 0
b11 )
b11 1
b11 #
b11 %
b11 .
#6
b111 5
b1010 !
b1010 *
b1010 4
b100 3
b100 (
b100 0
b111 #
b111 %
b111 .
#7
b1111 !
b1111 *
b1111 4
b0 5
b1111 3
b1 +
b0 2
b1111 (
b1111 0
b0 )
b0 1
b1100 $
b1100 &
b1100 /
b11 #
b11 %
b11 .
#8
b1010 !
b1010 *
b1010 4
b1010 3
b0 +
b1010 (
b1010 0
b0 $
b0 &
b0 /
b1010 #
b1010 %
b1010 .
#9
b111 !
b111 *
b111 4
b111 3
b111 (
b111 0
b100 $
b100 &
b100 /
b11 #
b11 %
b11 .
#10
b1111 !
b1111 *
b1111 4
b1111 3
b1 +
b1111 (
b1111 0
b1 $
b1 &
b1 /
b1110 #
b1110 %
b1110 .
#11
b110 5
b1001 !
b1001 *
b1001 4
b10 2
b101 3
b0 +
b10 )
b10 1
b101 (
b101 0
b110 $
b110 &
b110 /
b11 #
b11 %
b11 .
#12
b10 $
b10 &
b10 /
b111 #
b111 %
b111 .
#13
b110 !
b110 *
b110 4
b1 5
b100 3
b1 2
b100 (
b100 0
b1 )
b1 1
b101 $
b101 &
b101 /
b1 #
b1 %
b1 .
#14
b1010 !
b1010 *
b1010 4
b100 5
b10 3
b100 2
b10 (
b10 0
b100 )
b100 1
b100 $
b100 &
b100 /
b110 #
b110 %
b110 .
#15
b1 9
16
b1 -
b1 ,
b11110 !
b11110 *
b1110 4
b111 5
b0 3
b1111 2
b0 (
b0 0
b1111 )
b1111 1
b1111 $
b1111 &
b1111 /
b1111 #
b1111 %
b1111 .
#16
